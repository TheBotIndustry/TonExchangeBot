from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.deal import deal_currency_keyboard, deal_adverts_keyboard, deal_subcategories_keyboard, \
    deal_categories_keyboard, deal_cryptocurrency_keyboard
from loader import dp, database


@dp.callback_query_handler(text="continueWatchAdvert", state='*')
async def continueWatchAdvert_handler(call: types.CallbackQuery, state: FSMContext):
    await state.reset_state(False)
    await state.update_data(selectExchange=True)
    data = await state.get_data()
    if data.get('market_subcategory_id'):
        category = await database.get_category(data['market_category_id'])
        subcategory = await database.get_subcategory(data['market_subcategory_id'])
        adverts = await database.get_adverts_market(market_is_sell=data['market_is_sell'],
                                                    currency=data['market_currency'],
                                                    subcategory_id=data['market_subcategory_id'],
                                                    cryptocurrency=data['market_cryptocurrency'])
        if not adverts:
            key = await deal_currency_keyboard(data['market_is_sell'])
            await call.message.edit_text(f"<b>ü§∑ –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –µ—â—ë –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b>\n\n"
                                         f"<b>{data['market_text']} {data['market_cryptocurrency']}</b>\n\n"
                                         f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é:",
                                         reply_markup=key)
            await state.update_data(market_currency=None, market_category_id=None,
                                    market_subcategory_id=None)
        else:
            await state.update_data(filterAdvertAmount=None)
            data = await state.get_data()
            market_sell_or_buy_text = "–ø—Ä–∏–Ω—è—Ç–∏—è" if data['market_is_sell'] == True else "–æ—Ç–ø—Ä–∞–≤–∫–∏"
            key = await deal_adverts_keyboard(data['market_category_id'], adverts, data['market_currency'],
                                              call.message.chat.id, data['filterAdvertAmount'], 1)
            await call.message.edit_text(
                f"<b>{data['market_text']} {data['market_cryptocurrency']}</b> –∑–∞ <b>{data['market_currency']}</b>\n\n"
                f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n\n"
                f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n\n"
                f"<i>–í–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ –∑–Ω–∞–∫–æ–º ¬´üî∑¬ª.</i>",
                reply_markup=key)
    elif data.get('market_category_id'):
        category = await database.get_category(data['market_category_id'])
        adverts = await database.get_subcategories_market(market_is_sell=data['market_is_sell'],
                                                          currency=data['market_currency'],
                                                          category_id=data['market_category_id'],
                                                          cryptocurrency=data['market_cryptocurrency'])
        if not adverts:
            key = await deal_currency_keyboard(data['market_is_sell'])
            await call.message.edit_text(f"<b>ü§∑ –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –µ—â—ë –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π</b>\n\n"
                                         f"<b>{data['market_text']} {data['market_cryptocurrency']}</b>\n\n"
                                         f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é:",
                                         reply_markup=key)
            await state.update_data(market_currency=None, market_category_id=None,
                                    market_subcategory_id=None)
        else:
            market_sell_or_buy_text = "–ø—Ä–∏–Ω—è—Ç–∏—è" if data['market_is_sell'] == True else "–æ—Ç–ø—Ä–∞–≤–∫–∏"
            key = await deal_subcategories_keyboard(data['market_currency'], adverts)
            await call.message.edit_text(
                f"<b>{data['market_text']} {data['market_cryptocurrency']}</b> –∑–∞ <b>{data['market_currency']}</b> ({category.name})\n\n"
                f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:",
                reply_markup=key)
    elif data.get('market_currency'):
        adverts = await database.get_categories_market(market_is_sell=data['market_is_sell'], currency=data['market_currency'],
                                                       cryptocurrency=data['market_cryptocurrency'])
        if not adverts:
            await call.answer("ü§∑ –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –µ—â—ë –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π, –Ω–æ –í—ã –º–æ–∂–µ—à—å –∏—Ö —Å–æ–∑–¥–∞—Ç—å",
                              show_alert=True)
        else:
            market_sell_or_buy_text = "–ø—Ä–∏–Ω–∏–º–∞—Ç—å" if data['market_is_sell'] == True else "–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å"
            key = await deal_categories_keyboard(data['market_cryptocurrency'], adverts)
            await call.message.edit_text(
                f"<b>{data['market_text']} {data['market_cryptocurrency']}</b> –∑–∞ <b>{data['market_currency']}</b>\n\n"
                f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —É–¥–æ–±–Ω–µ–µ –±—É–¥–µ—Ç {market_sell_or_buy_text} –¥–µ–Ω—å–≥–∏:",
                reply_markup=key)
    elif data.get('market_cryptocurrency'):
        key = await deal_currency_keyboard(data['market_is_sell'])
        await call.message.edit_text(f"<b>{data['market_text']} {data['market_cryptocurrency']}</b>\n\n"
                                     f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é:",
                                     reply_markup=key)
    else:
        key = await deal_cryptocurrency_keyboard()
        market_text_second = "–ø–æ–∫—É–ø–∫–∏" if not data['market_is_sell'] else "–ø—Ä–æ–¥–∞–∂–∏"
        await call.message.edit_text(f"<b>{data['market_text']}</b>\n\n"
                                     f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è {market_text_second}:",
                                     reply_markup=key)
