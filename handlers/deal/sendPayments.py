from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from keyboards.deal import send_payment_deal_keyboard, createDealContrAgent_keyboard, createDealCreator_keyboard, \
    deal_adverts_keyboard, send_payment_creator_deal_keyboard, confirm_send_payment_creator_deal_keyboard, \
    confirm_transfer_user_deal_keyboard
from keyboards.exchange import exchange_keyboard
from loader import dp, database


class SendPayments_StatesGroup(StatesGroup):
    send_user = State()
    send_creator = State()


@dp.message_handler(state=SendPayments_StatesGroup.send_user)
async def sendPayments_send_user_handler(message: types.Message, state: FSMContext):
    await state.reset_state(False)
    await message.delete()
    data = await state.get_data()
    try:
        await dp.bot.delete_message(message.chat.id, data['second_message'])
    except:
        pass
    deal = await database.get_deal(data['deal_id'])
    subcategory = await database.get_subcategory(deal.subcategory_id)
    category = await database.get_category(deal.category_id)
    if len(message.text) <= 200:
        await database.update_payment_deal(deal.id, message.text)
        try:
            deal_text = "–ø–æ–∫—É–ø–∫–∏" if deal.is_sell else "–ø—Ä–æ–¥–∞–∂–µ"
            deal_text_second = "–ø–æ–∫—É–ø–∞–µ—Ç–µ" if deal.is_sell else "–ø—Ä–æ–¥–∞—ë—Ç–µ"
            market_sell_or_buy_text = "–æ—Ç–ø—Ä–∞–≤–∫–∏" if deal.is_sell else "–ø—Ä–∏–Ω—è—Ç–∏—è"
            subcategory = await database.get_subcategory(deal.subcategory_id)
            category = await database.get_category(deal.category_id)
            key = await createDealContrAgent_keyboard(deal.id)
            creator_message = await dp.bot.send_message(deal.creator_user_id,
                                                        f"üìÉ –£ –í–∞—Å –Ω–æ–≤–∞—è —Å–¥–µ–ª–∫–∞ –ø–æ <b>{deal_text} {deal.cryptocurrency}</b> –∑–∞ <b>{deal.currency}</b>.\n\n"
                                                        f"<b>‚àô –ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏:</b> {deal.id}\n\n"
                                                        f"<b>‚àô –£—Å–ª–æ–≤–∏—è:</b> –í—ã <b><u>{deal_text_second}</u> {deal.amount_crypto} {deal.cryptocurrency}</b> –∑–∞ "
                                                        f"<b>{deal.amount_currency} {deal.currency}</b>\n"
                                                        f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n\n"
                                                        f"–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã –Ω–∞ –¥–∞–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è?\n\n"
                                                        f"<b>‚è≥ –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è, –µ—Å–ª–∏ –í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç</b>",
                                                        reply_markup=key)
            deal_is_sell_text = "–ø—Ä–æ–¥–∞—ë—Ç–µ" if deal.is_sell else "–ø–æ–∫—É–ø–∞–µ—Ç–µ"
            market_sell_or_buy_text = "–æ—Ç–ø—Ä–∞–≤–∫–∏" if not deal.is_sell else "–ø—Ä–∏–Ω—è—Ç–∏—è"

            data = await state.get_data()
            key = await exchange_keyboard(data)
            second_message = await message.answer(f"<b>üîÑ –û–±–º–µ–Ω</b>\n\n"
                                                  f"üí∏ –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å/–ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.",
                                                  reply_markup=key)
            await state.update_data(second_message=second_message.message_id)

            key = await createDealCreator_keyboard(deal.id)
            user_message = await message.answer(
                "üìÉ –°–æ–∑–¥–∞–Ω–∞ —Å–¥–µ–ª–∫–∞, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞.\n\n"
                f"<b>‚àô –ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏:</b> {deal.id}\n\n"
                f"<b>‚àô –£—Å–ª–æ–≤–∏—è:</b> –í—ã <b><u>{deal_is_sell_text}</u> {deal.amount_crypto} {deal.cryptocurrency}</b> –∑–∞ "
                f"<b>{deal.amount_currency} {deal.currency}</b>\n"
                f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n"
                f"<b>‚àô –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b> <code>{message.text}</code>\n\n"
                "<b>‚è≥ –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è, –µ—Å–ª–∏ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç</b>",
                reply_markup=key)
            await database.update_message_deal(deal_id=deal.id, creator_mess_id=creator_message.message_id,
                                               user_mess_id=user_message.message_id)
        except:
            await database.delete_deal(deal.id)
            adverts = await database.get_adverts_market(market_is_sell=data['market_is_sell'],
                                                        currency=data['market_currency'],
                                                        subcategory_id=data['market_subcategory_id'],
                                                        cryptocurrency=data['market_cryptocurrency'])
            key = await deal_adverts_keyboard(data['market_category_id'], adverts, data['market_currency'],
                                              message.chat.id, data['filterAdvertAmount'], 1)
            market_sell_or_buy_text = "–ø—Ä–∏–Ω—è—Ç–∏—è" if data['market_is_sell'] == True else "–æ—Ç–ø—Ä–∞–≤–∫–∏"
            second_message = await message.answer(
                f"<b>–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–º, —Å–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.</b>\n\n"
                f"<b>{data['market_text']} {data['market_cryptocurrency']}</b> –∑–∞ <b>{data['market_currency']}</b>\n\n"
                f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n\n"
                f"üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n\n"
                f"<i>–í–∞—à–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å–æ –∑–Ω–∞–∫–æ–º ¬´üî∑¬ª.</i>",
                reply_markup=key)
            await state.update_data(second_message=second_message.message_id)
            await database.delete_deal(deal.id)
            if deal.is_sell:
                await database.get_back_deposit(deal.user_id, deal.cryptocurrency, deal.amount_crypto)
    else:
        key = await send_payment_deal_keyboard(data['payment_advert_id'])
        second_message = await message.answer(
            f"<b>–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤</b>\n\n"
            f"üëâ –ü—Ä–∏—à–ª–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è <b>{deal.currency}</b> –Ω–∞ {subcategory.name} ({category.name}):",
            reply_markup=key)
        await state.update_data(second_message=second_message.message_id)
        await SendPayments_StatesGroup.send_user.set()


@dp.message_handler(state=SendPayments_StatesGroup.send_creator)
async def sendPayments_send_creator_handler(message: types.Message, state: FSMContext):
    await state.reset_state(False)
    await message.delete()
    data = await state.get_data()
    deal = await database.get_deal(data['deal_deal_id'])
    if len(message.text) <= 200:
        await database.update_payment_deal(deal.id, message.text)
        deal_text = "–ø–æ–∫—É–ø–∫–∏" if deal.is_sell else "–ø—Ä–æ–¥–∞–∂–µ"
        deal_text_second = "–ø–æ–∫—É–ø–∞–µ—Ç–µ" if deal.is_sell else "–ø—Ä–æ–¥–∞—ë—Ç–µ"
        market_sell_or_buy_text = "–æ—Ç–ø—Ä–∞–≤–∫–∏" if deal.is_sell else "–ø—Ä–∏–Ω—è—Ç–∏—è"
        subcategory = await database.get_subcategory(deal.subcategory_id)
        category = await database.get_category(deal.category_id)
        key = await confirm_send_payment_creator_deal_keyboard(deal.id)
        await dp.bot.edit_message_text(
            f"–°–¥–µ–ª–∫–∞ –ø–æ <b>{deal_text} {deal.cryptocurrency}</b> –∑–∞ <b>{deal.currency}</b>.\n\n"
            f"<b>‚àô –ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏:</b> {deal.id}\n\n"
            f"<b>‚àô –£—Å–ª–æ–≤–∏—è:</b> –í—ã <b><u>{deal_text_second}</u> {deal.amount_crypto} {deal.cryptocurrency}</b> –∑–∞ "
            f"<b>{deal.amount_currency} {deal.currency}</b>\n"
            f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n"
            f"<b>‚àô –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b> <code>{message.text}</code>\n\n"
            f"–í—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã?\n\n"
            f"<b>‚è≥ –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä–æ–µ—Ç—Å—è, –µ—Å–ª–∏ –í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 10 –º–∏–Ω—É—Ç</b>",
            chat_id=deal.creator_user_id, message_id=deal.creator_mess_id, reply_markup=key)
    else:
        key = await send_payment_creator_deal_keyboard(deal.id)
        subcategory = await database.get_subcategory(deal.subcategory_id)
        category = await database.get_category(deal.category_id)
        await dp.bot.edit_message_text(text=f"<b>–ú–∞–∫—Å–∏–º—É–º 200 —Å–∏–º–≤–æ–ª–æ–≤</b>\n\n"
                                            f"üëâ –ü—Ä–∏—à–ª–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è <b>{deal.currency}</b> –Ω–∞ {subcategory.name} ({category.name}):",
                                       chat_id=deal.creator_user_id, message_id=deal.creator_mess_id, reply_markup=key)
        await SendPayments_StatesGroup.send_creator.set()


@dp.callback_query_handler(text_startswith='changeCreatorPaymentDeal', state='*')
async def changeCreatorPaymentDeal_handler(call: types.CallbackQuery, state: FSMContext):
    deal = await database.get_deal(call.data.split()[1])
    key = await send_payment_creator_deal_keyboard(deal.id)
    await state.update_data(deal_deal_id=deal.id)
    subcategory = await database.get_subcategory(deal.subcategory_id)
    category = await database.get_category(deal.category_id)
    await call.message.edit_text(
        f"üëâ –ü—Ä–∏—à–ª–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è <b>{deal.currency}</b> –Ω–∞ {subcategory.name} ({category.name}):",
        reply_markup=key)
    await SendPayments_StatesGroup.send_creator.set()


@dp.callback_query_handler(text_startswith='confirmCreatorPaymentDeal', state='*')
async def confirmCreatorPaymentDeal_handler(call: types.CallbackQuery, state: FSMContext):
    deal = await database.get_deal(call.data.split()[1])
    deal_text = "–ø–æ–∫—É–ø–∫–∏" if deal.is_sell else "–ø—Ä–æ–¥–∞–∂–µ"
    deal_text_second = "–ø–æ–∫—É–ø–∞–µ—Ç–µ" if deal.is_sell else "–ø—Ä–æ–¥–∞—ë—Ç–µ"
    market_sell_or_buy_text = "–æ—Ç–ø—Ä–∞–≤–∫–∏" if deal.is_sell else "–ø—Ä–∏–Ω—è—Ç–∏—è"
    subcategory = await database.get_subcategory(deal.subcategory_id)
    category = await database.get_category(deal.category_id)
    await call.message.edit_text(
        f"<b>–û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥.</b>\n\n"
        f"–°–¥–µ–ª–∫–∞ –ø–æ <b>{deal_text} {deal.cryptocurrency}</b> –∑–∞ <b>{deal.currency}</b>.\n\n"
        f"<b>‚àô –ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏:</b> {deal.id}\n\n"
        f"<b>‚àô –£—Å–ª–æ–≤–∏—è:</b> –í—ã <b><u>{deal_text_second}</u> {deal.amount_crypto} {deal.cryptocurrency}</b> –∑–∞ "
        f"<b>{deal.amount_currency} {deal.currency}</b>\n"
        f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n"
        f"<b>‚àô –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b> <code>{deal.payment}</code>\n\n"
        f"<b>‚è≥ –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç</b>")
    try:
        await dp.bot.delete_message(deal.user_id, deal.user_mess_id)
    except:
        pass
    deal_text = "–ø–æ–∫—É–ø–∫–∏" if not deal.is_sell else "–ø—Ä–æ–¥–∞–∂–µ"
    deal_text_second = "–ø–æ–∫—É–ø–∞–µ—Ç–µ" if not deal.is_sell else "–ø—Ä–æ–¥–∞—ë—Ç–µ"
    market_sell_or_buy_text = "–æ—Ç–ø—Ä–∞–≤–∫–∏" if not deal.is_sell else "–ø—Ä–∏–Ω—è—Ç–∏—è"
    key = await confirm_transfer_user_deal_keyboard(deal.id)
    user_mess = await dp.bot.send_message(deal.user_id, f"<b>–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞—á–∞–ª–æ —Å–¥–µ–ª–∫–∏.</b>\n\n"
                                                        f"–°–¥–µ–ª–∫–∞ –ø–æ <b>{deal_text} {deal.cryptocurrency}</b> –∑–∞ <b>{deal.currency}</b>.\n\n"
                                                        f"<b>‚àô –ù–æ–º–µ—Ä —Å–¥–µ–ª–∫–∏:</b> {deal.id}\n\n"
                                                        f"<b>‚àô –£—Å–ª–æ–≤–∏—è:</b> –í—ã <b><u>{deal_text_second}</u> {deal.amount_crypto} {deal.cryptocurrency}</b> –∑–∞ "
                                                        f"<b>{deal.amount_currency} {deal.currency}</b>\n"
                                                        f"<b>‚àô –°–ø–æ—Å–æ–± {market_sell_or_buy_text} –¥–µ–Ω–µ–≥:</b> {subcategory.name} ({category.name})\n"
                                                        f"<b>‚àô –†–µ–∫–≤–∏–∑–∏—Ç—ã:</b> <code>{deal.payment}</code>\n\n"
                                                        f"–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã ‚§¥\n\n"
                                                        f"<b>‚è≥ –°–¥–µ–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ–Ω–∏—Ç—Å—è, –µ—Å–ª–∏ –í—ã –Ω–µ –ø–µ—Ä–µ–≤–µ–¥—ë—Ç–µ –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –º–∏–Ω—É—Ç</b>",
                                          reply_markup=key)
    await database.update_message_deal(deal_id=deal.id, user_mess_id=user_mess.message_id)
